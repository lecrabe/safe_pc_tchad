system(sprintf("(echo 1; echo \"#1 #2 * #3 * \") | oft-calc -ot Byte %s %s",
im_input,
paste0(outdir,"/","tmp_mask.tif")))
########################################
## Apply data mask
system(sprintf("gdal_calc.py -A %s -B %s --type=Byte --co COMPRESS=LZW --outfile=%s --calc=%s",
paste0(outdir,"/","tmp_mask.tif"),
paste0(outdir,"/","tmp_reclass.tif"),
paste0(outdir,"/","tmp_reclass_masked.tif"),
"\"(A>0)*B\""))
####################  CREATE A PSEUDO COLOR TABLE
cols <- col2rgb(c("black","darkgreen","lightyellow","yellow","darkgrey"))
colors()
pct <- data.frame(cbind(c(0:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(outdir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
################################################################################
## Add pseudo color table to result
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(outdir,"/color_table.txt"),
paste0(outdir,"/","tmp_reclass_masked.tif"),
paste0(outdir,"/","tmp_pct_reclass_masked.tif")
))
########################################
## Compress final result
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(outdir,"/","tmp_pct_reclass_masked.tif"),
output_rf
))
t1_file_m   <-  output_rf   # time 1 file
segs_id     <- all_sg_id
outdir  <- paste0(tiledir,"/time2/")
dir.create(outdir)
im_input <- t2_input
source(paste0(scriptdir,"set_parameters_classif.R"),echo=TRUE)
source(paste0(scriptdir,"prepare_training_data.R"),echo=TRUE)
source(paste0(scriptdir,"supervised_classification.R"),echo=TRUE)
t2_file_m   <-  output_rf  # time 2 file
source(paste0(scriptdir,"set_parameters_merge.R"),echo=TRUE)
segs_id
system(sprintf("oft-his -i %s -o %s -um %s -maxval %s",
t2_file_m,
t2_cl_st,
segs_id,
nbclass
))
nbclass
segs_id
sprintf("oft-his -i %s -o %s -um %s -maxval %s",
t2_file_m,
t2_cl_st,
segs_id,
nbclass
)
all_sg_id
segs_id
source(paste0(scriptdir,"set_parameters_merge.R"),echo=TRUE)
system(sprintf("oft-his -i %s -o %s -um %s -maxval %s",
t2_file_m,
t2_cl_st,
segs_id,
nbclass
))
outdir  <- paste0(tiledir,"/time1/")
im_input <- t1_input
source(paste0(scriptdir,"set_parameters_classif.R"),echo=TRUE)
segs_id     <- all_sg_id
segs_id
system(sprintf("oft-his -i %s -o %s -um %s -maxval %s",
t2_file_m,
t2_cl_st,
segs_id,
nbclass
))
system(sprintf("oft-his -i %s -o %s -um %s -maxval %s",
t1_file_m,
t1_cl_st,
segs_id,
nbclass
))
system(sprintf("oft-stat -i %s -o %s -um %s -nostd",
imad,
im_cl_st,
segs_id))
df_t2 <- read.table(t2_cl_st)
df_t1 <- read.table(t1_cl_st)
df_im <- read.table(im_cl_st)
names(df_t2) <- c("sg_id",paste0("t2_",c("total","no_data",legend$class)))
names(df_im) <- c("sg_id","sg_sz",paste0("imad",1:nbbands))
names(df_t1) <- c("sg_id",paste0("t1_",c("total","no_data",legend$class)))
head(df_t2)
head(df_t1)
head(df_im)
summary(df_t1$t1_total - rowSums(df_t1[,paste0("t1_",c("no_data",legend$class))]))
df <- df_t2
df$sortid <- row(df)[,1]
df <- merge(df,df_im,by.x="sg_id",by.y="sg_id")
df <- merge(df,df_t1,by.x="sg_id",by.y="sg_id")
df <- merge(df,legend,by.x="t2_class",by.y="value")
head(df)
table(df$class,df$t2_class)
df1 <- df[,colSums(df[,!(names(df) %in% names(legend))]) != 0]
summary(df1$t1_total)
fuelwood_classes <- legend[c(grep(pattern="forest",legend$class)),]$class
(my_fuelwood_classes_t2 <- paste0("t2_",fuelwood_classes))
(my_fuelwood_classes_t1 <- paste0("t1_",fuelwood_classes))
head(df1)
df1$recl <- 3
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
tryCatch({
df1[
df1$t2_total > 10 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
df2 <- arrange(df1,sortid)
table(df2$recl)
write.table(file=reclass,df2[,c("sg_id","recl")],sep=" ",quote=FALSE, col.names=FALSE,row.names=FALSE)
system(sprintf("(echo %s; echo 1; echo 1; echo 2; echo 0) | oft-reclass -oi  %s %s",
reclass,
paste0(mergedir,"/","tmp_reclass.tif"),
segs_id
))
cols <- col2rgb(c("red","darkgreen","grey","lightgreen"))
pct <- data.frame(cbind(c(1:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(mergedir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_reclass.tif"),
paste0(mergedir,"/","tmp_reclass_byte.tif")
))
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(mergedir,"/color_table.txt"),
paste0(mergedir,"/","tmp_reclass_byte.tif"),
paste0(mergedir,"/","tmp_pct_reclass.tif")
))
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_pct_reclass.tif"),
chg_class
))
df1$recl <- 3
## Fuelwood stable is if it was majority of Fuelwood in both time periods
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood loss is if it was majority of Fuelwood in t1 and other than water in t2
tryCatch({
df1[
df1$t2_total > 5 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.7*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood gains is if it was majority of Fuelwood in period 2 only
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
## Resort in the same order as it was when read.
df2 <- arrange(df1,sortid)
table(df2$recl)
## Export as data table
write.table(file=reclass,df2[,c("sg_id","recl")],sep=" ",quote=FALSE, col.names=FALSE,row.names=FALSE)
## Reclass the raster with the change values
system(sprintf("(echo %s; echo 1; echo 1; echo 2; echo 0) | oft-reclass -oi  %s %s",
reclass,
paste0(mergedir,"/","tmp_reclass.tif"),
segs_id
))
####################  CREATE A PSEUDO COLOR TABLE
cols <- col2rgb(c("red","darkgreen","grey","lightgreen"))
pct <- data.frame(cbind(c(1:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(mergedir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
################################################################################
## Add pseudo color table to result
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_reclass.tif"),
paste0(mergedir,"/","tmp_reclass_byte.tif")
))
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(mergedir,"/color_table.txt"),
paste0(mergedir,"/","tmp_reclass_byte.tif"),
paste0(mergedir,"/","tmp_pct_reclass.tif")
))
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_pct_reclass.tif"),
chg_class
))
df1$recl <- 3
## Fuelwood stable is if it was majority of Fuelwood in both time periods
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood loss is if it was majority of Fuelwood in t1 and other than water in t2
tryCatch({
df1[
df1$t2_total > 5 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.4*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood gains is if it was majority of Fuelwood in period 2 only
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
## Resort in the same order as it was when read.
df2 <- arrange(df1,sortid)
table(df2$recl)
## Export as data table
write.table(file=reclass,df2[,c("sg_id","recl")],sep=" ",quote=FALSE, col.names=FALSE,row.names=FALSE)
## Reclass the raster with the change values
system(sprintf("(echo %s; echo 1; echo 1; echo 2; echo 0) | oft-reclass -oi  %s %s",
reclass,
paste0(mergedir,"/","tmp_reclass.tif"),
segs_id
))
####################  CREATE A PSEUDO COLOR TABLE
cols <- col2rgb(c("red","darkgreen","grey","lightgreen"))
pct <- data.frame(cbind(c(1:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(mergedir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
################################################################################
## Add pseudo color table to result
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_reclass.tif"),
paste0(mergedir,"/","tmp_reclass_byte.tif")
))
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(mergedir,"/color_table.txt"),
paste0(mergedir,"/","tmp_reclass_byte.tif"),
paste0(mergedir,"/","tmp_pct_reclass.tif")
))
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_pct_reclass.tif"),
chg_class
))
df1$recl <- 3
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
df2 <- arrange(df1,sortid)
table(df2$recl)
tryCatch({
df1[
df1$t2_total > 5 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.4*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
df2 <- arrange(df1,sortid)
table(df2$recl)
df1$recl <- 3
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
tryCatch({
df1[
df1$t2_total > 1000 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.4*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
df2 <- arrange(df1,sortid)
table(df2$recl)
## Export as data table
write.table(file=reclass,df2[,c("sg_id","recl")],sep=" ",quote=FALSE, col.names=FALSE,row.names=FALSE)
## Reclass the raster with the change values
system(sprintf("(echo %s; echo 1; echo 1; echo 2; echo 0) | oft-reclass -oi  %s %s",
reclass,
paste0(mergedir,"/","tmp_reclass.tif"),
segs_id
))
####################  CREATE A PSEUDO COLOR TABLE
cols <- col2rgb(c("red","darkgreen","grey","lightgreen"))
pct <- data.frame(cbind(c(1:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(mergedir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
################################################################################
## Add pseudo color table to result
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_reclass.tif"),
paste0(mergedir,"/","tmp_reclass_byte.tif")
))
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(mergedir,"/color_table.txt"),
paste0(mergedir,"/","tmp_reclass_byte.tif"),
paste0(mergedir,"/","tmp_pct_reclass.tif")
))
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_pct_reclass.tif"),
chg_class
))
df1$recl <- 3
## Fuelwood stable is if it was majority of Fuelwood in both time periods
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood loss is if it was majority of Fuelwood in t1 and other than water in t2
tryCatch({
df1[
df1$t2_total > 100 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.4*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood gains is if it was majority of Fuelwood in period 2 only
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
## Resort in the same order as it was when read.
df2 <- arrange(df1,sortid)
table(df2$recl)
## Export as data table
write.table(file=reclass,df2[,c("sg_id","recl")],sep=" ",quote=FALSE, col.names=FALSE,row.names=FALSE)
## Reclass the raster with the change values
system(sprintf("(echo %s; echo 1; echo 1; echo 2; echo 0) | oft-reclass -oi  %s %s",
reclass,
paste0(mergedir,"/","tmp_reclass.tif"),
segs_id
))
####################  CREATE A PSEUDO COLOR TABLE
cols <- col2rgb(c("red","darkgreen","grey","lightgreen"))
pct <- data.frame(cbind(c(1:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(mergedir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
################################################################################
## Add pseudo color table to result
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_reclass.tif"),
paste0(mergedir,"/","tmp_reclass_byte.tif")
))
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(mergedir,"/color_table.txt"),
paste0(mergedir,"/","tmp_reclass_byte.tif"),
paste0(mergedir,"/","tmp_pct_reclass.tif")
))
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_pct_reclass.tif"),
chg_class
))
df1$recl <- 3
## Fuelwood stable is if it was majority of Fuelwood in both time periods
tryCatch({
df1[
df1$t2_total > 5 &                                 # size is bigger than 10 pixels (1 pixel = 0.6m*0.6m = 0.36 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] > 0.9*df1$t1_total ,  # time 1 classification says more than 90% fuelwood
]$recl <- 2
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood loss is if it was majority of Fuelwood in t1 and other than water in t2
tryCatch({
df1[
df1$t2_total > 5 &                                # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] < 0.1*df1$t2_total &  # time 2 classification says less than 10% fuelwood
df1[,my_fuelwood_classes_t1] > 0.4*df1$t1_total &  # time 1 classification says more than 90% fuelwood
abs(df1$imad4) > 1                                 # IMAD indicates some change is occuring
,]$recl <- 1
}, error=function(e){cat("No such configuration\n")}
)
## Fuelwood gains is if it was majority of Fuelwood in period 2 only
tryCatch({
df1[
df1$t2_total > 10 &                                  # size is bigger than 10 pixels (1 pixel = 1.5m*1.5m = 2.25 m2)
df1[,my_fuelwood_classes_t2] > 0.9*df1$t2_total &  # time 2 classification says more than 90% fuelwood
df1[,my_fuelwood_classes_t1] < 0.1*df1$t1_total &  # time 1 classification says less than 10% fuelwood
abs(df1$imad4) > 1 ,
]$recl <- 4
}, error=function(e){cat("Configuration impossible \n")}
)
## Resort in the same order as it was when read.
df2 <- arrange(df1,sortid)
table(df2$recl)
## Export as data table
write.table(file=reclass,df2[,c("sg_id","recl")],sep=" ",quote=FALSE, col.names=FALSE,row.names=FALSE)
## Reclass the raster with the change values
system(sprintf("(echo %s; echo 1; echo 1; echo 2; echo 0) | oft-reclass -oi  %s %s",
reclass,
paste0(mergedir,"/","tmp_reclass.tif"),
segs_id
))
####################  CREATE A PSEUDO COLOR TABLE
cols <- col2rgb(c("red","darkgreen","grey","lightgreen"))
pct <- data.frame(cbind(c(1:4),
cols[1,],
cols[2,],
cols[3,]
))
write.table(pct,paste0(mergedir,"/color_table.txt"),row.names = F,col.names = F,quote = F)
################################################################################
## Add pseudo color table to result
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_reclass.tif"),
paste0(mergedir,"/","tmp_reclass_byte.tif")
))
system(sprintf("(echo %s) | oft-addpct.py %s %s",
paste0(mergedir,"/color_table.txt"),
paste0(mergedir,"/","tmp_reclass_byte.tif"),
paste0(mergedir,"/","tmp_pct_reclass.tif")
))
system(sprintf("gdal_translate -ot byte -co COMPRESS=LZW %s %s",
paste0(mergedir,"/","tmp_pct_reclass.tif"),
chg_class
))
